_ :: [Word2]  (holes: [Word2])
_ :: BT Word2  (holes: BT Word2)
_ :: Bool  (holes: Bool)
_ :: Word2  (holes: Word2)
Null :: BT Word2
True :: Bool
False :: Bool
insert :: Word2 -> BT Word2 -> BT Word2
delete :: Word2 -> BT Word2 -> BT Word2
toList :: BT Word2 -> [Word2]
fromList :: [Word2] -> BT Word2
isSearch :: BT Word2 -> Bool
ordered :: [Word2] -> Bool
isIn :: Word2 -> BT Word2 -> Bool
(<=) :: Word2 -> Word2 -> Bool
(==) :: Word2 -> Word2 -> Bool
(/=) :: Word2 -> Word2 -> Bool

                              isSearch t == True
                           delete x Null == Null
                      ordered (toList t) == True
                             isIn x Null == False
                  fromList (toList Null) == Null
                   delete x (insert x t) == delete x t
                   insert x (insert x t) == insert x t
                     isIn x (insert x t) == True
            isIn x (fromList (toList t)) == isIn x t
toList (fromList (toList (fromList xs))) == toList (fromList xs)
 fromList (toList (fromList (toList t))) == fromList (toList t)
       fromList (toList (insert x Null)) == insert x Null
                   delete x (delete y t) == delete y (delete x t)

          p ==> True
       Null <=  t
      False ==> p
toList Null <=  xs
          t <=  insert x t

ordered xs ==> fromList (toList (fromList xs)) == fromList xs
    x /= y ==>        delete y (insert x Null) == insert x Null
  isIn x t ==>                      insert x t == t
  isIn x t ==>  insert x (fromList (toList t)) == fromList (toList t)
  isIn y t ==>           insert y (insert x t) == insert x t

