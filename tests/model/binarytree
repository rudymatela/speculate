max expr size  =    5
  |- on ineqs  =    4
  |- on conds  =    4
max  #-tests   =  500
min  #-tests   =   25  (to consider p ==> q true)
max  #-vars    =    2  (for inequational and conditional laws)

_ :: [Word2]  (holes: [Word2])
_ :: BT Word2  (holes: BT Word2)
_ :: Bool  (holes: Bool)
_ :: Word2  (holes: Word2)
Null :: BT Word2
insert :: Word2 -> BT Word2 -> BT Word2
delete :: Word2 -> BT Word2 -> BT Word2
isIn :: Word2 -> BT Word2 -> Bool
(<=) :: Word2 -> Word2 -> Bool
(/=) :: Word2 -> Word2 -> Bool
ordered :: [Word2] -> Bool
strictlyOrdered :: [Word2] -> Bool
toList :: BT Word2 -> [Word2]
fromList :: [Word2] -> BT Word2
isSearch :: BT Word2 -> Bool
[] :: [Word2]
True :: Bool
False :: Bool
(==) :: [Word2] -> [Word2] -> Bool
(==) :: BT Word2 -> BT Word2 -> Bool
(==) :: Bool -> Bool -> Bool
(==) :: Word2 -> Word2 -> Bool

         delete x Null == Null
 delete x (delete x t) == delete x t
 insert x (insert x t) == insert x t
 delete x (insert x t) == delete x t
 insert x (delete x t) == insert x t
 delete x (delete y t) == delete y (delete x t)
 insert x (insert y t) == insert y (insert x t)
              (x == y) == isIn x (insert y Null)
           isIn x Null == False
   isIn x (delete x t) == False
   isIn x (insert x t) == True
   (False == (x /= y)) == isIn x (insert y Null)
   (False == isIn x t) == (toList t == toList (delete x t))
isIn x (insert y Null) == isIn y (insert x Null)

         Null <= t
            t <= insert x t
   delete x t <= t
insert x Null <= insert x t

x /= y ==> delete y (insert x t) == insert x (delete y t)

