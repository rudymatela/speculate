_ :: Set Int  (holes: Set Int)
_ :: Int  (holes: Int)
_ :: Bool  (holes: Bool)
False :: Bool
True :: Bool
emptyS :: Set Int
singleS :: Int -> Set Int
insertS :: Int -> Set Int -> Set Int
deleteS :: Int -> Set Int -> Set Int
sizeS :: Set Int -> Int
(<~) :: Int -> Set Int -> Bool
(\/) :: Set Int -> Set Int -> Set Int
(/\) :: Set Int -> Set Int -> Set Int

                  insertS x s == s \/ singleS x
                       s /\ s == s
                       s \/ s == s
                  s /\ emptyS == emptyS
                  s \/ emptyS == s
             deleteS x emptyS == emptyS
                  x <~ emptyS == False
        deleteS x (singleS x) == emptyS
               x <~ singleS x == True
           deleteS x (s /\ t) == s /\ deleteS x t
                (s /\ t) /\ u == s /\ (t /\ u)
                (s \/ t) \/ u == s \/ (t \/ u)
                s /\ (s \/ t) == s
             s /\ deleteS x s == deleteS x s
                s \/ (s /\ t) == s
             s \/ deleteS x s == s
      deleteS x (deleteS x s) == deleteS x s
             x <~ deleteS x s == False
                       s /\ t == t /\ s
                       s \/ t == t \/ s
            sizeS (singleS x) == sizeS (singleS y)
               x <~ singleS y == y <~ singleS x
             s /\ deleteS x t == t /\ deleteS x s
      deleteS x (deleteS y s) == deleteS y (deleteS x s)
sizeS (deleteS x (singleS y)) == sizeS (deleteS y (singleS x))

                     p ==> True
                emptyS <=  s
                 False ==> p
          sizeS emptyS <=  sizeS s
singleS (sizeS emptyS) <=  singleS (sizeS s)

