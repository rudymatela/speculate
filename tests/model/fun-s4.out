max expr size  =    4
  |- on ineqs  =    3
  |- on conds  =    3
max  #-tests   = 1000
min  #-tests   =   50  (to consider p ==> q true)
max  #-vars    =    2  (for inequational and conditional laws)

_ :: Int
_ :: [Int]
_ :: Int -> Int
map :: (Int -> Int) -> [Int] -> [Int]
id :: Int -> Int
(.) :: (Int -> Int) -> (Int -> Int) -> Int -> Int

     id x == x
  f (g x) == (f . g) x
map id xs == xs
   f . id == f
   id . f == f


