max expr size  =    4
  |- on ineqs  =    3
  |- on conds  =    3
max  #-tests   =  500
max  #-vars    =    2  (for inequational and conditional laws)

_ :: Bool  (holes: Bool)
_ :: Int  (holes: Int)
_ :: Graph Int  (holes: Graph Int)
0 :: Int
True :: Bool
empty :: Graph Int
vertex :: Int -> Graph Int
(+) :: Graph Int -> Graph Int -> Graph Int
(*) :: Graph Int -> Graph Int -> Graph Int
overlay :: Graph Int -> Graph Int -> Graph Int
connect :: Graph Int -> Graph Int -> Graph Int
edge :: Int -> Int -> Graph Int
length :: Graph Int -> Int
size :: Graph Int -> Int

length (vertex i) == length (vertex j)
  size (vertex i) == length (vertex 0)
length (edge i j) == length (edge k i')
length (edge i j) == size (edge k i')
   length (x * y) == length (x + y)
     size (x * y) == size (x + y)
            x + x == x
        x + empty == x
        x * empty == x
        empty * x == x
            x + y == y + x
      overlay x y == x + y
      connect x y == x * y

         0 <= length x
         0 <= size x
  length x <= size x
size empty <= size x
     empty <= x
         x <= x + y
         x <= x * y
         x <= y * x
  vertex i <= edge i j
  vertex i <= edge j i
     x + y <= x * y

