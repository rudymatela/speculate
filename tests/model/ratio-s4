max expr size  =    4
  |- on ineqs  =    3
  |- on conds  =    3
max  #-tests   =  500
min  #-tests   =   25  (to consider p ==> q true)
max  #-vars    =    2  (for inequational and conditional laws)

_ :: Integer  (holes: Integer)
_ :: Ratio Integer  (holes: Ratio Integer)
id :: Ratio Integer -> Ratio Integer
abs :: Ratio Integer -> Ratio Integer
negate :: Ratio Integer -> Ratio Integer
(+) :: Ratio Integer -> Ratio Integer -> Ratio Integer
(*) :: Ratio Integer -> Ratio Integer -> Ratio Integer
(/) :: Ratio Integer -> Ratio Integer -> Ratio Integer
(%) :: Integer -> Integer -> Ratio Integer
recip :: Ratio Integer -> Ratio Integer
numerator :: Ratio Integer -> Integer
denominator :: Ratio Integer -> Integer
0 % 1 :: Ratio Integer
1 % 1 :: Ratio Integer
0 :: Integer
1 :: Integer

    denominator (abs q) == denominator q
 denominator (negate q) == denominator q
denominator (q + 1 % 1) == denominator q
    denominator (x % 1) == 1
      numerator (x % 1) == x
                   id q == q
            abs (abs q) == abs q
      negate (negate q) == q
         abs (negate q) == abs q
            q * (0 % 1) == 0 % 1
            q * (1 % 1) == q
              q + 0 % 1 == q
            q / (1 % 1) == q
                  q * r == r * q
                  q + r == r + q
           q * negate r == negate (q * r)
            abs (q * q) == q * q
           q + negate q == 0 % 1
     q / negate (1 % 1) == negate q
      0 % denominator q == 0 % 1

                   q <= abs q
                   0 <= denominator q
                   1 <= denominator q
               0 % 1 <= abs q
                   q <= q + 1 % 1
               0 % 1 <= q * q
            negate q <= abs q
      negate (abs q) <= q
                   0 <= numerator (abs q)
      negate (abs q) <= 0 % 1
         numerator q <= numerator (abs q)
      negate (abs q) <= negate q
numerator (negate q) <= numerator (abs q)

