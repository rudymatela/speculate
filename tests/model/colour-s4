_ :: Maybe (Ratio Integer)  (holes: Maybe (Ratio Integer))
_ :: Colour  (holes: Colour)
_ :: Ratio Integer  (holes: Ratio Integer)
(+) :: Colour -> Colour -> Colour
(-) :: Colour -> Colour -> Colour
chroma :: Colour -> Ratio Integer
hue :: Colour -> Maybe (Ratio Integer)
saturation :: Colour -> Ratio Integer
value :: Colour -> Ratio Integer
lightness :: Colour -> Ratio Integer
fromHSV :: Ratio Integer -> Ratio Integer -> Ratio Integer -> Colour
fromHSL :: Ratio Integer -> Ratio Integer -> Ratio Integer -> Colour
mix :: Colour -> Colour -> Colour
black :: Colour
white :: Colour
red :: Colour
grey :: Colour
green :: Colour
blue :: Colour
Just :: Ratio Integer -> Maybe (Ratio Integer)
Nothing :: Maybe (Ratio Integer)
0 % 1 :: Ratio Integer
1 % 1 :: Ratio Integer
1 % 2 :: Ratio Integer

        hue (mix c black) == hue c
         hue (mix c grey) == hue c
        hue (mix c white) == hue c
              hue (c + c) == hue (c + grey)
                    c - c == black
                  mix c c == c
                c + black == c
                c + white == white
                c - black == c
                c - white == black
                black - c == black
                    c + d == d + c
                  mix c d == mix d c
      fromHSL q r (0 % 1) == black
      fromHSL q r (1 % 1) == white
      fromHSV q r (0 % 1) == black
      fromHSV q (0 % 1) r == fromHSL (0 % 1) (0 % 1) r
      fromHSL (1 % 1) q r == fromHSL (0 % 1) q r
      fromHSV (1 % 1) q r == fromHSV (0 % 1) q r
fromHSL q (0 % 1) (1 % 2) == grey
fromHSV q (1 % 1) (1 % 1) == fromHSL q (1 % 1) (1 % 2)
      fromHSL q (0 % 1) r == fromHSL s (0 % 1) r
      chroma (mix c grey) == chroma (mix c black)
     chroma (mix c white) == chroma (mix c black)
        chroma (grey - c) == chroma (c + grey)
       chroma (white - c) == chroma c
    saturation (c + blue) == chroma (c + blue)
   saturation (c + green) == chroma (c + green)
     saturation (c + red) == chroma (c + red)
 saturation (mix c black) == saturation c
         value (c + blue) == 1 % 1
        value (c + green) == 1 % 1
          value (c + red) == 1 % 1
         value (c - blue) == chroma (c - blue)
        value (c - green) == chroma (c - green)
          value (c - red) == chroma (c - red)
         value (blue - c) == chroma (blue - c)
        value (green - c) == chroma (green - c)
          value (red - c) == chroma (red - c)

       0 % 1 <= chroma c
       0 % 1 <= lightness c
       0 % 1 <= saturation c
       0 % 1 <= value c
    chroma c <= 1 % 1
 lightness c <= 1 % 1
saturation c <= 1 % 1
     value c <= 1 % 1
    chroma c <= saturation c
    chroma c <= value c
 lightness c <= value c
       hue c <= Just (1 % 1)

