max expr size  =    5
  |- on ineqs  =    4
  |- on conds  =    4
max  #-tests   = 1000
min  #-tests   =   50  (to consider p ==> q true)
max  #-vars    =    2  (for inequational and conditional laws)

_ :: Int  (holes: Int)
_ :: [Int]  (holes: [Int])
_ :: Int -> Int  (holes: Int -> Int)
map :: (Int -> Int) -> [Int] -> [Int]
id :: Int -> Int
(.) :: (Int -> Int) -> (Int -> Int) -> Int -> Int

          id x == x
       f (g x) == (f . g) x
     map id xs == xs
map (f . g) xs == map f (map g xs)
        f . id == f
        id . f == f
   (f . g) . h == f . (g . h)


