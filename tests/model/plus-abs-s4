max expr size  =    4
  |- on ineqs  =    3
  |- on conds  =    3
max  #-tests   =  500
min  #-tests   =   25  (to consider p ==> q true)
max  #-vars    =    2  (for inequational and conditional laws)

_ :: Int  (holes: Int)
_ :: Bool  (holes: Bool)
(+) :: Int -> Int -> Int
id :: Int -> Int
abs :: Int -> Int
0 :: Int
1 :: Int
(<=) :: Int -> Int -> Bool
(<) :: Int -> Int -> Bool
True :: Bool
False :: Bool
(==) :: Int -> Int -> Bool
(==) :: Bool -> Bool -> Bool

        id x == x
 abs (abs x) == abs x
       x + 0 == x
       x + y == y + x
    (x == 0) == (abs x <= 0)
 (x < abs x) == (x < 0)
(x <= abs x) == True
(x == abs x) == (0 <= x)
 (abs x < x) == False
(abs x <= x) == (0 <= x)
(0 <= abs x) == True
 (abs x < 0) == False

x <= abs x
0 <= abs x
x <= x + 1

x <= 0 ==> x + abs x == 0

