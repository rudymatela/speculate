max expr size  =    5
max  #-tests   =  500
min  #-tests   =   25  (to consider p ==> q true)
max  #-vars    =    3  (for inequational and conditional laws)

_ :: [Int]  (holes: [Int])
_ :: Int  (holes: Int)
[] :: [Int]
(:) :: Int -> [Int] -> [Int]
(++) :: [Int] -> [Int] -> [Int]
head :: [Int] -> Int
tail :: [Int] -> [Int]

        xs ++ [] == xs
        [] ++ xs == xs
            x:xs == [x] ++ xs
     tail (x:xs) == xs
(xs ++ ys) ++ zs == xs ++ (ys ++ zs)
     head (x:xs) == x

      [] <= xs
      xs <= xs ++ ys
      xs <= ys ++ xs
      xs <= tail (xs ++ xs)
      xs <= head xs:tail xs
xs ++ ys <= xs ++ (ys ++ zs)
xs ++ ys <= xs ++ (zs ++ ys)
    x:xs <= x:(y:xs)

